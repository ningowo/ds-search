{"ast":null,"code":"var _jsxFileName = \"/Users/chensiying/cs61b/Distributed-Systems/Final Project/ds-search/src/main/java/team/dsys/dssearch/client/src/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // allow us to make request ourself\nimport CommentCreate from './CommentCreate';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n  const [posts, setPosts] = useState({}); //initial value: object\n\n  const fetchPosts = async () => {\n    const res = await axios.get('http://posts.com/posts'); //return response object\n    // const res = await axios.get('http://localhost:4002/posts');//return response object\n\n    setPosts(res.data); //data is res's property\n  };\n\n  //useEffect: used to run some code at some specific point of time at a lifecycle of a component\n  //only call fetchPosts when the component is firstly displayed on the screen\n  useEffect(() => {\n    fetchPosts();\n  }, []); // [] tells react to only run this function one time\n\n  //display all posts\n  //Object.values(posts) => gives back all valus inside object posts\n  //map: iterate over elements of the array and store new array in the variable\n  const renderedPosts = Object.values(posts).map(post => {\n    return (\n      /*#__PURE__*/\n      //jsx; react requires to set key\n      _jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: \"30%\",\n          marginBottom: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n            comments: post.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CommentCreate, {\n            postId: post.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    );\n  }); //give all the elements into an array\n\n  //display renderedPosts \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row flex-wrap justify-content-between\",\n    children: renderedPosts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}, \"x9bp4+EUybyoJxklz6lKZgAYJjU=\");","map":{"version":3,"names":["React","useState","useEffect","axios","CommentCreate","CommentList","posts","setPosts","fetchPosts","res","get","data","renderedPosts","Object","values","map","post","width","marginBottom","title","comments","id"],"sources":["/Users/chensiying/cs61b/Distributed-Systems/Final Project/ds-search/src/main/java/team/dsys/dssearch/client/src/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // allow us to make request ourself\nimport CommentCreate from './CommentCreate';\nimport CommentList from './CommentList';\n\nexport default () => {\n    const [posts, setPosts] = useState({});//initial value: object\n\n    const fetchPosts = async () => {\n        const res = await axios.get('http://posts.com/posts');//return response object\n        // const res = await axios.get('http://localhost:4002/posts');//return response object\n\n        setPosts(res.data);//data is res's property\n\n    }\n    \n    //useEffect: used to run some code at some specific point of time at a lifecycle of a component\n    //only call fetchPosts when the component is firstly displayed on the screen\n    useEffect(() => {\n        fetchPosts();\n    }, []); // [] tells react to only run this function one time\n\n    //display all posts\n    //Object.values(posts) => gives back all valus inside object posts\n    //map: iterate over elements of the array and store new array in the variable\n    const renderedPosts = Object.values(posts).map(post => {\n        return (//jsx; react requires to set key\n            <div className=\"card\" style={{width: \"30%\", marginBottom: \"20px\"}} key={post.id}> \n                <div className=\"card-body\">\n                    <h3>{post.title}</h3>\n                    <CommentList comments={post.comments} />\n                    <CommentCreate postId={post.id} />\n                </div>\n            </div>\n        );\n    }) //give all the elements into an array\n\n    //display renderedPosts \n    return (\n        <div className=\"d-flex flex-row flex-wrap justify-content-between\">\n            {renderedPosts}\n        </div>\n    );\n\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,kBAAe,MAAM;EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvC,MAAMO,UAAU,GAAG,YAAY;IAC3B,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACtD;;IAEAH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC,CAAC;EAEvB,CAAC;;EAED;EACA;EACAT,SAAS,CAAC,MAAM;IACZM,UAAU,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA;EACA;EACA,MAAMI,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACR,KAAK,CAAC,CAACS,GAAG,CAACC,IAAI,IAAI;IACnD;MAAA;MAAQ;MACJ;QAAK,SAAS,EAAC,MAAM;QAAC,KAAK,EAAE;UAACC,KAAK,EAAE,KAAK;UAAEC,YAAY,EAAE;QAAM,CAAE;QAAA,uBAC9D;UAAK,SAAS,EAAC,WAAW;UAAA,wBACtB;YAAA,UAAKF,IAAI,CAACG;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eACrB,QAAC,WAAW;YAAC,QAAQ,EAAEH,IAAI,CAACI;UAAS;YAAA;YAAA;YAAA;UAAA,QAAG,eACxC,QAAC,aAAa;YAAC,MAAM,EAAEJ,IAAI,CAACK;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MAChC,GAL8DL,IAAI,CAACK,EAAE;QAAA;QAAA;QAAA;MAAA;IAMzE;EAEd,CAAC,CAAC,EAAC;;EAEH;EACA,oBACI;IAAK,SAAS,EAAC,mDAAmD;IAAA,UAC7DT;EAAa;IAAA;IAAA;IAAA;EAAA,QACZ;AAGd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}